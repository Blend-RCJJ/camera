import sensor
import image
import lcd
import time
#import utime
#from machine import UART
#from Maix import GPIO
#from fpioa_manager import *

#fm.register(34,fm.fpioa.UART1_TX)
#fm.register(35,fm.fpioa.UART1_RX)
#uart_out = UART(UART.UART1, 115200, 8, None, 1, timeout=1000, read_buf_len=4096)

"""
from modules import ws2812

led_io, led_num = 8, 1

ws = ws2812(led_io, led_num)
r,g,b =100,100,100
ws.set_led(0, (r,g,b))
ws.display()

time.sleep_ms(10000)

ws = ws2812(led_io, led_num)
r,g,b =0,0,0
ws.set_led(0, (r,g,b))
ws.display()
"""

lcd.init(freq=15000000)
sensor.reset()
sensor.set_pixformat(sensor.RGB565)
sensor.set_framesize(sensor.QQVGA)
sensor.run(1)
sensor.set_vflip(180)
#sensor.skip_frames(360)
#sensor.set_windowing((1080,1080))

green_threshold  =  (56, 97, -29, -17, 34, 51)
red_threshold  =  (59, 72, 38, 61, -13, 33)
blue_threshold  =  (36, 69, 4, 32, -67, -41)
#red_threshold  =  (0, 30, 24, 72, 4, 27)
#blue_threshold  =  (0, 100, -55, 31, -60, -13)
black_threshold = (0, 9, -3, 4, -2, 7)

while True:
    img=sensor.snapshot()

    blobs1 = img.find_blobs([green_threshold])
    blobs2 = img.find_blobs([red_threshold])
    blobs3 = img.find_blobs([blue_threshold])

    blobs4 = img.find_blobs([black_threshold])

    lines = img.find_lines(threshold = 2000, max_theta_difference = 10)#threshold=5000, merge_distance=5, max_theta_difference=2
    circles = img.find_circles(threshold = 2000)
    #rects = img.find_rects()

    blobs = img.find_blobs([target_lab_threshold], x_stride = 2, y_stride = 2, pixels_threshold = 100, merge = True, margin = 20)
    #if blobs:
        #uart_out.write('Detected\n')

    #else:
         #uart_out.write('NOT Detected\n')


    #if blobs4:
        #for b in blobs4:
            #print(len(lines))
            #for item in lines:
            #print(len(circles))
            #for item in circles:
            #print(len(rects))
            #for item in rects:
                #img2 = img.draw_line(item[0], item[1], item[2], item[3], color=(0,255,0), thickness=5)

    #lcd.display(img2)

    if blobs1:
        for b in blobs1:
            tmp=img.draw_rectangle(b[0:4],color=(153,204,51))
            tmp=img.draw_cross(b[5], b[6],color=(153,204,51))
            c=img.get_pixel(b[5], b[6])
            img = img.draw_string(40, 20, "GREEN",color=(0,0,0), scale=2)

    if blobs2:
        for b in blobs2:
            tmp=img.draw_rectangle(b[0:4],color=(255,0,0))
            tmp=img.draw_cross(b[5], b[6],color=(255,0,0))
            c=img.get_pixel(b[5], b[6])
            img = img.draw_string(40, 30, "RED",color=(0,0,0), scale=2)

    if blobs3:
        for b in blobs3:
            tmp=img.draw_rectangle(b[0:4],color=(0,255,255))
            tmp=img.draw_cross(b[5], b[6],color=(0,255,255))
            c=img.get_pixel(b[5], b[6])
            img = img.draw_string(40, 40, "BLUE",color=(0,0,0), scale=2)

    if blobs4:
        A = len(lines)
        B = len(circles)

        print(A)
        print(B)
        #for item in lines:
            #print(item[0])
        if(A >= 3):
            #if(B <= 2):
                #img.draw_string(40, 20, "H",color=(0,255,0), scale=5)
                #print("H")
            if(B >= 4 and B <= 6):
                img.draw_string(40, 20, "U",color=(0,255,0), scale=5)
                print("U")
            else:
                img.draw_string(40, 20, "H",color=(0,255,0), scale=5)
                print("H")
        if(A == 1 or A == 2):
            if(B >= 3 and B <= 6):
                img.draw_string(40, 20, "U",color=(0,255,0), scale=5)
                print("U")
            if(B >= 7):
                img.draw_string(40, 20, "S",color=(0,255,0), scale=5)
                print("S")


    lcd.display(img)

